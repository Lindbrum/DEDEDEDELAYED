-- MySQL Script generated by MySQL Workbench
-- Tue Feb 19 12:55:55 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema ambiental_monitoring
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema ambiental_monitoring
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `ambiental_monitoring` DEFAULT CHARACTER SET utf8 ;
USE `ambiental_monitoring` ;

-- -----------------------------------------------------
-- Table `ambiental_monitoring`.`Utente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ambiental_monitoring`.`Utente` (
  `idUtente` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `idZona` VARCHAR(45) NULL,
  `admin` TINYINT NOT NULL DEFAULT 0,
  PRIMARY KEY (`idUtente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ambiental_monitoring`.`Distretto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ambiental_monitoring`.`Distretto` (
  `idDistretto` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NULL,
  PRIMARY KEY (`idDistretto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ambiental_monitoring`.`Edificio`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ambiental_monitoring`.`Edificio` (
  `idEdificio` INT NOT NULL AUTO_INCREMENT,
  `nome` VARCHAR(45) NULL,
  `Distretto_idDistretto` INT NOT NULL,
  PRIMARY KEY (`idEdificio`),
  INDEX `fk_Edificio_Distretto1_idx` (`Distretto_idDistretto` ASC),
  CONSTRAINT `fk_Edificio_Distretto1`
    FOREIGN KEY (`Distretto_idDistretto`)
    REFERENCES `ambiental_monitoring`.`Distretto` (`idDistretto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ambiental_monitoring`.`Area`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ambiental_monitoring`.`Area` (
  `idArea` INT NOT NULL,
  `nome` VARCHAR(45) NULL,
  `alert` SMALLINT(2) NOT NULL DEFAULT 0,
  `Edificio_idEdificio` INT NOT NULL,
  PRIMARY KEY (`idArea`),
  INDEX `fk_Area_Edificio1_idx` (`Edificio_idEdificio` ASC),
  CONSTRAINT `fk_Area_Edificio1`
    FOREIGN KEY (`Edificio_idEdificio`)
    REFERENCES `ambiental_monitoring`.`Edificio` (`idEdificio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ambiental_monitoring`.`Sensore`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ambiental_monitoring`.`Sensore` (
  `idSensore` INT NOT NULL AUTO_INCREMENT,
  `tipo` VARCHAR(45) NOT NULL,
  `variabileAmbientale` DOUBLE NULL,
  `massimale` DOUBLE NOT NULL,
  `frequenzaInvio` INT NOT NULL,
  `ultimoInvio` DATETIME NULL,
  `area` INT NOT NULL,
  `installatore` INT NOT NULL,
  PRIMARY KEY (`idSensore`),
  INDEX `fk_Sensore_Zona1_idx` (`area` ASC),
  INDEX `fk_Sensore_Utente1_idx` (`installatore` ASC),
  CONSTRAINT `fk_Sensore_Zona1`
    FOREIGN KEY (`area`)
    REFERENCES `ambiental_monitoring`.`Area` (`idArea`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Sensore_Utente1`
    FOREIGN KEY (`installatore`)
    REFERENCES `ambiental_monitoring`.`Utente` (`idUtente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ambiental_monitoring`.`Segnale`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ambiental_monitoring`.`Segnale` (
  `idSegnale` INT NOT NULL AUTO_INCREMENT,
  `sensore` INT NOT NULL,
  `timestamp` DATETIME NOT NULL,
  `variabileAmbientale` VARCHAR(45) NOT NULL,
  `alert` TINYINT(1) NOT NULL DEFAULT 0,
  PRIMARY KEY (`idSegnale`),
  INDEX `fk_Segnale_Sensore_idx` (`sensore` ASC),
  CONSTRAINT `fk_Segnale_Sensore`
    FOREIGN KEY (`sensore`)
    REFERENCES `ambiental_monitoring`.`Sensore` (`idSensore`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `ambiental_monitoring`.`Gestisce`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `ambiental_monitoring`.`Gestisce` (
  `Utente_idUtente` INT NOT NULL,
  `Distretto_idDistretto` INT NOT NULL,
  `Area_idArea` INT NOT NULL,
  `Edificio_idEdificio` INT NOT NULL,
  PRIMARY KEY (`Utente_idUtente`, `Distretto_idDistretto`, `Area_idArea`, `Edificio_idEdificio`),
  INDEX `fk_Utente_has_Distretto_Distretto1_idx` (`Distretto_idDistretto` ASC),
  INDEX `fk_Utente_has_Distretto_Utente1_idx` (`Utente_idUtente` ASC),
  INDEX `fk_Gestisce_Area1_idx` (`Area_idArea` ASC),
  INDEX `fk_Gestisce_Edificio1_idx` (`Edificio_idEdificio` ASC),
  CONSTRAINT `fk_Utente_has_Distretto_Utente1`
    FOREIGN KEY (`Utente_idUtente`)
    REFERENCES `ambiental_monitoring`.`Utente` (`idUtente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Utente_has_Distretto_Distretto1`
    FOREIGN KEY (`Distretto_idDistretto`)
    REFERENCES `ambiental_monitoring`.`Distretto` (`idDistretto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Gestisce_Area1`
    FOREIGN KEY (`Area_idArea`)
    REFERENCES `ambiental_monitoring`.`Area` (`idArea`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Gestisce_Edificio1`
    FOREIGN KEY (`Edificio_idEdificio`)
    REFERENCES `ambiental_monitoring`.`Edificio` (`idEdificio`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE USER 'root' IDENTIFIED BY 'root';

GRANT ALL ON `ambiental_monitoring`.* TO 'root';
CREATE USER 'admin' IDENTIFIED BY 'admin';

GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `ambiental_monitoring`.* TO 'admin';
GRANT EXECUTE ON ROUTINE `ambiental_monitoring`.* TO 'admin';
CREATE USER 'client' IDENTIFIED BY 'client';

GRANT SELECT ON TABLE `ambiental_monitoring`.* TO 'client';
CREATE USER 'server' IDENTIFIED BY 'server';

GRANT SELECT, INSERT, TRIGGER, UPDATE, DELETE ON TABLE `ambiental_monitoring`.* TO 'server';
GRANT EXECUTE ON ROUTINE `ambiental_monitoring`.* TO 'server';

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
